{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\Toggle\\\\Toggle.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport TaskM from '../TaskM/TaskM';\n/*\r\n  TodoMVC\r\n  1. add todo\r\n  2. display todos\r\n  3. cross off todo\r\n  4. show number of active todos\r\n  5. filter all/active/complete\r\n  6. delete todo\r\n  7. delete all complete\r\n    7.1 only show if atleast one is complete\r\n  8. button to toggle all on/off\r\n*/\n\nvar TodoList = /*#__PURE__*/function (_React$Component) {\n  _inherits(TodoList, _React$Component);\n\n  var _super = _createSuper(TodoList);\n\n  function TodoList() {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      todos: [],\n      todoToShow: \"all\",\n      toggleAllComplete: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addTodo\", function (todo) {\n      _this.setState(function (state) {\n        return {\n          todos: [todo].concat(_toConsumableArray(state.todos))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleComplete\", function (id) {\n      _this.setState(function (state) {\n        return {\n          todos: state.todos.map(function (todo) {\n            if (todo.id === id) {\n              // suppose to update\n              return _objectSpread(_objectSpread({}, todo), {}, {\n                complete: !todo.complete\n              });\n            } else {\n              return todo;\n            }\n          })\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateTodoToShow\", function (s) {\n      _this.setState({\n        todoToShow: s\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteTodo\", function (id) {\n      _this.setState(function (state) {\n        return {\n          todos: state.todos.filter(function (todo) {\n            return todo.id !== id;\n          })\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeAllTodosThatAreComplete\", function () {\n      _this.setState(function (state) {\n        return {\n          todos: state.todos.filter(function (todo) {\n            return !todo.complete;\n          })\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var todos = [];\n\n      if (this.state.todoToShow === \"all\") {\n        todos = this.state.todos;\n      } else if (this.state.todoToShow === \"active\") {\n        todos = this.state.todos.filter(function (todo) {\n          return !todo.complete;\n        });\n      } else if (this.state.todoToShow === \"complete\") {\n        todos = this.state.todos.filter(function (todo) {\n          return todo.complete;\n        });\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, todos.map(function (todo) {\n        return __jsx(TaskM, {\n          key: todo.id,\n          toggleComplete: function toggleComplete() {\n            return _this2.toggleComplete(todo.id);\n          },\n          onDelete: function onDelete() {\n            return _this2.handleDeleteTodo(todo.id);\n          },\n          todo: todo,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        });\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, \"todos left: \", this.state.todos.filter(function (todo) {\n        return !todo.complete;\n      }).length), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.updateTodoToShow(\"all\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, \"all\"), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.updateTodoToShow(\"active\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"active\"), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.updateTodoToShow(\"complete\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, \"complete\")), this.state.todos.some(function (todo) {\n        return todo.complete;\n      }) ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        onClick: this.removeAllTodosThatAreComplete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \"remove all complete todos\")) : null, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState(function (state) {\n            return {\n              todos: state.todos.map(function (todo) {\n                return _objectSpread(_objectSpread({}, todo), {}, {\n                  complete: state.toggleAllComplete\n                });\n              }),\n              toggleAllComplete: !state.toggleAllComplete\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, \"toggle all complete: \", \"\".concat(this.state.toggleAllComplete))));\n    }\n  }]);\n\n  return TodoList;\n}(React.Component);\n\nexport { TodoList as default };","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/ProgramaciÃ³n/Bluuweb/Next/ontime/components/Toggle/Toggle.js"],"names":["React","TaskM","TodoList","todos","todoToShow","toggleAllComplete","todo","setState","state","id","map","complete","s","filter","toggleComplete","handleDeleteTodo","length","updateTodoToShow","some","removeAllTodosThatAreComplete","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TaskM from '../TaskM/TaskM';\r\n\r\n/*\r\n  TodoMVC\r\n  1. add todo\r\n  2. display todos\r\n  3. cross off todo\r\n  4. show number of active todos\r\n  5. filter all/active/complete\r\n  6. delete todo\r\n  7. delete all complete\r\n    7.1 only show if atleast one is complete\r\n  8. button to toggle all on/off\r\n*/\r\n\r\n\r\nexport default class TodoList extends React.Component {\r\n  state = {\r\n    todos: [],\r\n    todoToShow: \"all\",\r\n    toggleAllComplete: true\r\n  };\r\n\r\n  addTodo = todo => {\r\n    this.setState(state => ({\r\n      todos: [todo, ...state.todos]\r\n    }));\r\n  };\r\n\r\n  toggleComplete = id => {\r\n    this.setState(state => ({\r\n      todos: state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          // suppose to update\r\n          return {\r\n            ...todo,\r\n            complete: !todo.complete\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    }));\r\n  };\r\n\r\n  updateTodoToShow = s => {\r\n    this.setState({\r\n      todoToShow: s\r\n    });\r\n  };\r\n\r\n  handleDeleteTodo = id => {\r\n    this.setState(state => ({\r\n      todos: state.todos.filter(todo => todo.id !== id)\r\n    }));\r\n  };\r\n\r\n  removeAllTodosThatAreComplete = () => {\r\n    this.setState(state => ({\r\n      todos: state.todos.filter(todo => !todo.complete)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let todos = [];\r\n\r\n    if (this.state.todoToShow === \"all\") {\r\n      todos = this.state.todos;\r\n    } else if (this.state.todoToShow === \"active\") {\r\n      todos = this.state.todos.filter(todo => !todo.complete);\r\n    } else if (this.state.todoToShow === \"complete\") {\r\n      todos = this.state.todos.filter(todo => todo.complete);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {todos.map(todo => (\r\n          <TaskM\r\n            key={todo.id}\r\n            toggleComplete={() => this.toggleComplete(todo.id)}\r\n            onDelete={() => this.handleDeleteTodo(todo.id)}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n        <div>\r\n          todos left: {this.state.todos.filter(todo => !todo.complete).length}\r\n        </div>\r\n        <div>\r\n          <button onClick={() => this.updateTodoToShow(\"all\")}>all</button>\r\n          <button onClick={() => this.updateTodoToShow(\"active\")}>\r\n            active\r\n          </button>\r\n          <button onClick={() => this.updateTodoToShow(\"complete\")}>\r\n            complete\r\n          </button>\r\n        </div>\r\n        {this.state.todos.some(todo => todo.complete) ? (\r\n          <div>\r\n            <button onClick={this.removeAllTodosThatAreComplete}>\r\n              remove all complete todos\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        <div>\r\n          <button\r\n            onClick={() =>\r\n              this.setState(state => ({\r\n                todos: state.todos.map(todo => ({\r\n                  ...todo,\r\n                  complete: state.toggleAllComplete\r\n                })),\r\n                toggleAllComplete: !state.toggleAllComplete\r\n              }))\r\n            }\r\n          >\r\n            toggle all complete: {`${this.state.toggleAllComplete}`}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}