{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\TaskM\\\\TaskM.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label } from 'reactstrap';\nconst url = \"https://jsonplaceholder.typicode.com/todos\";\nexport class TaskM extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [],\n      modalInsertar: false,\n      form: {\n        id: '',\n        title: ''\n      }\n    });\n\n    _defineProperty(this, \"modalInsertar\", () => {\n      this.setState({\n        modalInsertar: !this.state.modalInsertar\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", async e => {\n      e.persist();\n      await this.setState({\n        form: _objectSpread(_objectSpread({}, this.state.form), {}, {\n          [e.target.name]: e.target.value\n        })\n      });\n      console.log(this.state.form);\n    });\n\n    _defineProperty(this, \"peticionGet\", () => {\n      axios.get(url).then(response => {\n        this.setState({\n          data: response.data\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"peticionPost\", async () => {\n      delete this.state.form.id;\n      await axios.post(url, this.state.form).then(response => {\n        this.modalInsertar();\n        this.peticionGet();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.peticionGet();\n  }\n\n  render() {\n    const {\n      form\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => this.modalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Agregar Task\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }), __jsx(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \"TASK\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, \"ACCIONES\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, this.state.data.map(userID => {\n      return __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, userID.id), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }\n      }, userID.title), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }, \"Editar\"), \"   \", __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 45\n        }\n      }, \"Eliminar\")));\n    })))), __jsx(Modal, {\n      isOpen: this.state.modalInsertar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, __jsx(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Nueva Task\"), __jsx(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, __jsx(Label, {\n      htmlFor: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"ID\"), __jsx(Input, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      id: \"id\",\n      readOnly: true,\n      onChange: this.handleChange,\n      value: this.state.data.length + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), __jsx(Label, {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Task\"), __jsx(Input, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      id: \"id\",\n      onChange: this.handleChange,\n      value: form.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }))), __jsx(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => this.peticionPost(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Agregar\"), __jsx(Button, {\n      className: \"btn btn-danger\",\n      onClick: () => this.modalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Cancelar\"))));\n  }\n\n}\nexport default TaskM;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/Programaci√≥n/Bluuweb/Next/ontime/components/TaskM/TaskM.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Label","url","TaskM","data","modalInsertar","form","id","title","setState","state","e","persist","target","name","value","console","log","get","then","response","catch","error","message","post","peticionGet","componentDidMount","render","map","userID","handleChange","length","peticionPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label} from 'reactstrap';\r\n\r\nconst url= \"https://jsonplaceholder.typicode.com/todos\"\r\n\r\nexport class TaskM extends Component {\r\n    state = { \r\n        data: [],\r\n        modalInsertar: false,\r\n        form: {\r\n            id: '',\r\n            title: '',\r\n          },\r\n    };\r\n\r\n    modalInsertar=()=>{\r\n        this.setState({modalInsertar: !this.state.modalInsertar});\r\n    }\r\n\r\n    handleChange= async e=>{\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    peticionGet=()=> {\r\n        axios.get(url).then(response=>{\r\n            this.setState({data: response.data});\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n          })\r\n    }\r\n\r\n    peticionPost= async ()=>{\r\n        delete this.state.form.id;\r\n        await axios.post(url, this.state.form).then(response=>{\r\n          this.modalInsertar();\r\n          this.peticionGet();\r\n        }).catch(error=>{\r\n          console.log(error.message);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n    render() {\r\n        const {form} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <br />\r\n                    <Button className=\"btn btn-success\" onClick={()=>this.modalInsertar()}>Agregar Task</Button>\r\n                    <br /><br />\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>TASK</th>\r\n                                <th>ACCIONES</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.data.map((userID,)=>{\r\n                                return(\r\n                                    <tr>\r\n                                        <td>{userID.id}</td>\r\n                                        <td>{userID.title}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-secondary\">Editar</button>\r\n                                            {\"   \"}\r\n                                            <button className=\"btn btn-danger\">Eliminar</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                    Nueva Task\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"id\">ID</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"id\" id=\"id\" \r\n                        readOnly \r\n                        onChange={this.handleChange}\r\n                        value={this.state.data.length+1}/>\r\n                        <br />\r\n                        <Label htmlFor=\"title\">Task</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"title\" \r\n                        id=\"id\" \r\n                        onChange={this.handleChange}\r\n                        value={form.title}/> \r\n                    </FormGroup>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>Agregar</Button>\r\n                        <Button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskM\r\n"]},"metadata":{},"sourceType":"module"}