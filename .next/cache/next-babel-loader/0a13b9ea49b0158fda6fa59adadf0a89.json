{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\New\\\\contacts\\\\EditContact.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Consumer } from \"../context/context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      // Create an error object to catch and send message of error\n      errors: {}\n    });\n\n    _defineProperty(this, \"onSubmit\", async (dispatch, e) => {\n      // preventDefault() we don't want to actually submit by default\n      e.preventDefault();\n      const {\n        name,\n        email,\n        phone\n      } = this.state; // Check for Errors\n\n      if (name === '') {\n        this.setState({\n          errors: {\n            name: 'Name is required'\n          }\n        });\n        return;\n      }\n\n      if (email === '') {\n        this.setState({\n          errors: {\n            email: 'Email is required'\n          }\n        });\n        return;\n      }\n\n      if (phone === '') {\n        this.setState({\n          errors: {\n            phone: 'Phone is required'\n          }\n        });\n        return;\n      }\n\n      const updContact = {\n        name,\n        email,\n        phone\n      }; // We want to pull the id out of the url e.g. localhost:3000/contact/edit/1\n\n      const {\n        id\n      } = this.props.match.params; // Use await because of the async, then send our updContact payload\n\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact); // Use the dispatch method to update contact, and pass in the payload.data above\n\n      dispatch({\n        type: 'UPDATE_CONTACT',\n        payload: res.data\n      }); // Clear State\n\n      this.setState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {}\n      });\n      this.props.history.push(\"/\");\n    });\n\n    _defineProperty(this, \"onChange\", e => this.setState({\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  async componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  render() {\n    // Destructuring to extrat key in state object\n    const {\n      name,\n      email,\n      phone,\n      errors\n    } = this.state;\n    return __jsx(Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, value => {\n      const {\n        dispatch\n      } = value;\n      return __jsx(\"div\", {\n        className: \"card mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, \"Edit Contact\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, __jsx(\"form\", {\n        onSubmit: this.onSubmit.bind(this, dispatch),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, __jsx(TextInputGroup, {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Enter Name\",\n        value: name,\n        onChange: this.onChange,\n        error: errors.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }), __jsx(TextInputGroup, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        value: email,\n        onChange: this.onChange,\n        error: errors.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }), __jsx(TextInputGroup, {\n        label: \"Phone\",\n        name: \"phone\",\n        placeholder: \"Enter Phone\",\n        value: phone,\n        onChange: this.onChange,\n        error: errors.phone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Edit Contact\",\n        className: \"btn btn-light btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }))));\n    });\n  }\n\n}\n\nexport default AddContact;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/Programaci√≥n/Bluuweb/Next/ontime/components/New/contacts/EditContact.js"],"names":["React","Component","Consumer","TextInputGroup","axios","AddContact","name","email","phone","errors","dispatch","e","preventDefault","state","setState","updContact","id","props","match","params","res","put","type","payload","data","history","push","target","value","componentDidMount","get","contact","render","onSubmit","bind","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Consumer } from \"../context/context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        // Create an error object to catch and send message of error\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onSubmit = async (dispatch, e) => {\n        // preventDefault() we don't want to actually submit by default\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        // Check for Errors\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n        \n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        // We want to pull the id out of the url e.g. localhost:3000/contact/edit/1\n        const { id } = this.props.match.params;\n\n        // Use await because of the async, then send our updContact payload\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        // Use the dispatch method to update contact, and pass in the payload.data above\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\n        \n        // Clear State\n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors: {}\n        });\n\n        this.props.history.push(\"/\");\n    };\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n    render() {\n        // Destructuring to extrat key in state object\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => { \n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(\n                                        this,\n                                        dispatch\n                                    )}\n                                >\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Edit Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default AddContact;\n"]},"metadata":{},"sourceType":"module"}