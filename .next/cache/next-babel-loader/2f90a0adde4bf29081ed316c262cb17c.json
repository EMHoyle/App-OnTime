{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\TaskM\\\\TaskM.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label } from 'reactstrap';\nconst url = \"https://jsonplaceholder.typicode.com/todos\";\nexport class TaskM extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [],\n      modalInsertar: false,\n      form: {\n        id: '',\n        title: ''\n      },\n      tipoModal: ''\n    });\n\n    _defineProperty(this, \"modalInsertar\", () => {\n      this.setState({\n        modalInsertar: !this.state.modalInsertar\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", async e => {\n      e.persist();\n      await this.setState({\n        form: _objectSpread(_objectSpread({}, this.state.form), {}, {\n          [e.target.name]: e.target.value\n        })\n      });\n      console.log(this.state.form);\n    });\n\n    _defineProperty(this, \"seleccionTask\", userID => {\n      this.setState({\n        tipoModal: 'actualizar',\n        form: {\n          id: userID.id,\n          title: userID.title\n        }\n      });\n    });\n\n    _defineProperty(this, \"peticionGet\", () => {\n      axios.get(url).then(response => {\n        this.setState({\n          data: response.data\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"peticionPost\", async () => {\n      delete this.state.form.id;\n      await axios.post(url, this.state.form).then(response => {\n        this.modalInsertar();\n        this.peticionGet();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"peticionPut\", () => {\n      axios.put(url + this.state.form.id, this.state.form).then(response => {\n        this.modalInsertar();\n        this.peticionGet();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.peticionGet();\n  }\n\n  render() {\n    const {\n      form\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => {\n        this.setState({\n          form: null,\n          tipoModal: 'insertar'\n        });\n        this.modalInsertar();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Agregar Task\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }\n    }), __jsx(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"TASK\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, \"ACCIONES\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, this.state.data.map(userID => {\n      return __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, userID.id), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }, userID.title), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => {\n          this.seleccionTask(userID);\n          this.modalInsertar();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }\n      }, \"Editar\"), \"   \", __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }\n      }, \"Eliminar\")));\n    })))), __jsx(Modal, {\n      isOpen: this.state.modalInsertar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, __jsx(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Nueva Task\"), __jsx(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, __jsx(Label, {\n      htmlFor: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"ID\"), __jsx(Input, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      id: \"id\",\n      readOnly: true,\n      onChange: this.handleChange,\n      value: form ? form.id : this.state.data.length + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), __jsx(Label, {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Task\"), __jsx(Input, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      id: \"id\",\n      onChange: this.handleChange,\n      value: form ? form.title : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }))), __jsx(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, this.state.tipoModal == 'insertar' ? __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => this.peticionPost(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"Agregar\") : __jsx(Button, {\n      className: \"btn btn-primary\",\n      onClick: () => this.peticionPut(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Actualizar\"), __jsx(Button, {\n      className: \"btn btn-danger\",\n      onClick: () => this.modalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Cancelar\"))));\n  }\n\n}\nexport default TaskM;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/Programación/Bluuweb/Next/ontime/components/TaskM/TaskM.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Label","url","TaskM","data","modalInsertar","form","id","title","tipoModal","setState","state","e","persist","target","name","value","console","log","userID","get","then","response","catch","error","message","post","peticionGet","put","componentDidMount","render","map","seleccionTask","handleChange","length","peticionPost","peticionPut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label} from 'reactstrap';\r\n\r\nconst url= \"https://jsonplaceholder.typicode.com/todos\"\r\n\r\nexport class TaskM extends Component {\r\n    state = { \r\n        data: [],\r\n        modalInsertar: false,\r\n        form: {\r\n            id: '',\r\n            title: '',\r\n          },\r\n          tipoModal: '',\r\n    };\r\n\r\n    modalInsertar=()=>{\r\n        this.setState({modalInsertar: !this.state.modalInsertar});\r\n    }\r\n\r\n    handleChange= async e=>{\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    seleccionTask=(userID)=>{\r\n        this.setState({\r\n            tipoModal: 'actualizar',\r\n            form: {\r\n                id: userID.id,\r\n                title: userID.title,\r\n              }\r\n        })\r\n    }\r\n\r\n    peticionGet=()=> {\r\n        axios.get(url).then(response=>{\r\n            this.setState({data: response.data});\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n          })\r\n    }\r\n\r\n    peticionPost= async ()=>{\r\n        delete this.state.form.id;\r\n        await axios.post(url, this.state.form).then(response=>{\r\n          this.modalInsertar();\r\n          this.peticionGet();\r\n        }).catch(error=>{\r\n          console.log(error.message);\r\n        })\r\n    }\r\n\r\n    peticionPut=()=>{\r\n        axios.put(url+this.state.form.id, this.state.form).then(response=>{\r\n          this.modalInsertar();\r\n          this.peticionGet();\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n          })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n    render() {\r\n        const {form} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <br />\r\n                    <Button \r\n                    className=\"btn btn-success\" \r\n                    onClick={()=>{this.setState({form: null, tipoModal: 'insertar'}); this.modalInsertar()}}\r\n                    >Agregar Task</Button>\r\n                    <br /><br />\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>TASK</th>\r\n                                <th>ACCIONES</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.data.map((userID,)=>{\r\n                                return(\r\n                                    <tr>\r\n                                        <td>{userID.id}</td>\r\n                                        <td>{userID.title}</td>\r\n                                        <td>\r\n                                            <button \r\n                                            className=\"btn btn-secondary\" \r\n                                            onClick={()=>{this.seleccionTask(userID); this.modalInsertar()}}>Editar</button>\r\n                                            {\"   \"}\r\n                                            <button className=\"btn btn-danger\">Eliminar</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                    Nueva Task\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"id\">ID</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"id\" id=\"id\" \r\n                        readOnly \r\n                        onChange={this.handleChange}\r\n                        value={form?form.id: this.state.data.length+1}/>\r\n                        <br />\r\n                        <Label htmlFor=\"title\">Task</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"title\" \r\n                        id=\"id\" \r\n                        onChange={this.handleChange}\r\n                        value={form?form.title: ''}/> \r\n                    </FormGroup>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {this.state.tipoModal == 'insertar'?\r\n                        <Button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>Agregar</Button>:\r\n                        <Button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>Actualizar</Button>\r\n                        }\r\n                        <Button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskM\r\n"]},"metadata":{},"sourceType":"module"}