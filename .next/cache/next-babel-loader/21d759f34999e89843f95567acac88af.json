{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\New\\\\contacts\\\\Contact.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../context/context\";\nimport axios from \"axios\"; // This is a class component not functional component, we have to use 'this.props' instead of just props\n\nvar Contact = /*#__PURE__*/function (_Component) {\n  _inherits(Contact, _Component);\n\n  var _super = _createSuper(Contact);\n\n  function Contact() {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      // If click, show info\n      showContactInfo: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteClick\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id, dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios[\"delete\"](\"https://jsonplaceholder.typicode.com/users/\".concat(id));\n\n              case 3:\n                dispatch({\n                  type: \"DELETE_CONTACT\",\n                  payload: id\n                });\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: \"DELETE_CONTACT\",\n                  payload: id\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$contact = this.props.contact,\n          id = _this$props$contact.id,\n          name = _this$props$contact.name,\n          email = _this$props$contact.email,\n          phone = _this$props$contact.phone; // We can extract value out of props, so we don't need to pass in 'this.props' each time\n\n      var showContactInfo = this.state.showContactInfo;\n      return (// You need a Consumer to access the stuff from context.js\n        __jsx(Consumer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, function (value) {\n          // Pulling out dispatch() from the state\n          var dispatch = value.dispatch;\n          return __jsx(\"div\", {\n            className: \"card card-body mb-3\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }\n          }, __jsx(\"h4\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }, name, \" \", __jsx(\"i\", {\n            onClick: function onClick() {\n              return _this2.setState({\n                showContactInfo: !_this2.state.showContactInfo\n              });\n            },\n            className: \"fas fa-sort-down\",\n            style: {\n              cursor: \"pointer\"\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }\n          }), __jsx(\"i\", {\n            className: \"fas fa-times\",\n            style: {\n              cursor: \"pointer\",\n              \"float\": \"right\",\n              color: \"red\"\n            } // Add event listern to delete when icon is click\n            ,\n            onClick: _this2.onDeleteClick.bind(_this2, id, dispatch),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }\n          }), __jsx(Link, {\n            to: \"contact/edit/\".concat(id),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }\n          }, __jsx(\"i\", {\n            className: \"fas fa-pencil-alt\",\n            style: {\n              cursor: 'pointer',\n              \"float\": 'right',\n              color: 'black',\n              marginRight: '1rem'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }\n          }))), showContactInfo ? // If this is true; show the content, if 'null' then hide\n          __jsx(\"ul\", {\n            className: \"list-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }\n          }, __jsx(\"li\", {\n            className: \"list-group-item\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }\n          }, \"Email: \", email), __jsx(\"li\", {\n            className: \"list-group-item\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }\n          }, \"Phone: \", phone)) : null);\n        })\n      );\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default Contact;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/ProgramaciÃ³n/Bluuweb/Next/ontime/components/New/contacts/Contact.js"],"names":["React","Component","Link","PropTypes","Consumer","axios","Contact","showContactInfo","id","dispatch","type","payload","props","contact","name","email","phone","state","value","setState","cursor","color","onDeleteClick","bind","marginRight","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../context/context\";\nimport axios from \"axios\";\n\n// This is a class component not functional component, we have to use 'this.props' instead of just props\nclass Contact extends Component {\n    // Addign state here during onShowClick() event\n    state = {\n        // If click, show info\n        showContactInfo: false\n    };\n\n    // Add this function for deleting the properties\n    onDeleteClick = async (id, dispatch) => {\n        try {\n        await axios.delete\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({\n            type: \"DELETE_CONTACT\",\n            payload: id\n        })\n        } catch(e) {\n            dispatch({\n                type: \"DELETE_CONTACT\",\n                payload: id\n            })\n        }\n        \n        \n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact; // We can extract value out of props, so we don't need to pass in 'this.props' each time\n        const { showContactInfo } = this.state;\n\n        return (\n            // You need a Consumer to access the stuff from context.js\n            <Consumer>\n                {value => {\n                    // Pulling out dispatch() from the state\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}{\" \"}\n                                <i\n                                    onClick={() =>\n                                        this.setState({\n                                            showContactInfo: !this.state\n                                                .showContactInfo\n                                        })\n                                    }\n                                    className=\"fas fa-sort-down\"\n                                    style={{ cursor: \"pointer\" }}\n                                />\n                                <i\n                                    className=\"fas fa-times\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        color: \"red\"\n                                    }}\n                                    // Add event listern to delete when icon is click\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        id,\n                                        dispatch\n                                    )}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i \n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight: '1rem'\n                                        }}\n                                        ></i>\n                                </Link>\n\n                            </h4>\n                            {showContactInfo ? ( // If this is true; show the content, if 'null' then hide\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        Email: {email}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Phone: {phone}\n                                    </li>\n                                </ul>\n                            ) : null}\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}