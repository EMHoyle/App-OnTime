{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\New\\\\contacts\\\\Contact.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../context/context\";\nimport axios from \"axios\"; // This is a class component not functional component, we have to use 'this.props' instead of just props\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // If click, show info\n      showContactInfo: false\n    });\n\n    _defineProperty(this, \"onDeleteClick\", async (id, dispatch) => {\n      try {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({\n          type: \"DELETE_CONTACT\",\n          payload: id\n        });\n      } catch (e) {\n        dispatch({\n          type: \"DELETE_CONTACT\",\n          payload: id\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      email,\n      phone\n    } = this.props.contact; // We can extract value out of props, so we don't need to pass in 'this.props' each time\n\n    const {\n      showContactInfo\n    } = this.state;\n    return (// You need a Consumer to access the stuff from context.js\n      __jsx(Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, value => {\n        // Pulling out dispatch() from the state\n        const {\n          dispatch\n        } = value;\n        return __jsx(\"div\", {\n          className: \"card card-body mb-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        }, __jsx(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }\n        }, name, \" \", __jsx(\"i\", {\n          onClick: () => this.setState({\n            showContactInfo: !this.state.showContactInfo\n          }),\n          className: \"fas fa-sort-down\",\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }\n        }), __jsx(\"i\", {\n          className: \"fas fa-times\",\n          style: {\n            cursor: \"pointer\",\n            float: \"right\",\n            color: \"red\"\n          } // Add event listern to delete when icon is click\n          ,\n          onClick: this.onDeleteClick.bind(this, id, dispatch),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }\n        }), __jsx(Link, {\n          to: `contact/edit/${id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }\n        }, __jsx(\"i\", {\n          className: \"fas fa-pencil-alt\",\n          style: {\n            cursor: 'pointer',\n            float: 'right',\n            color: 'black',\n            marginRight: '1rem'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }\n        }))), showContactInfo ? // If this is true; show the content, if 'null' then hide\n        __jsx(\"ul\", {\n          className: \"list-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }\n        }, \"Email: \", email), __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }\n        }, \"Phone: \", phone)) : null);\n      })\n    );\n  }\n\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default Contact;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/ProgramaciÃ³n/Bluuweb/Next/ontime/components/New/contacts/Contact.js"],"names":["React","Component","Link","PropTypes","Consumer","axios","Contact","showContactInfo","id","dispatch","delete","type","payload","e","render","name","email","phone","props","contact","state","value","setState","cursor","float","color","onDeleteClick","bind","marginRight","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../context/context\";\nimport axios from \"axios\";\n\n// This is a class component not functional component, we have to use 'this.props' instead of just props\nclass Contact extends Component {\n    // Addign state here during onShowClick() event\n    state = {\n        // If click, show info\n        showContactInfo: false\n    };\n\n    // Add this function for deleting the properties\n    onDeleteClick = async (id, dispatch) => {\n        try {\n        await axios.delete\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({\n            type: \"DELETE_CONTACT\",\n            payload: id\n        })\n        } catch(e) {\n            dispatch({\n                type: \"DELETE_CONTACT\",\n                payload: id\n            })\n        }\n        \n        \n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact; // We can extract value out of props, so we don't need to pass in 'this.props' each time\n        const { showContactInfo } = this.state;\n\n        return (\n            // You need a Consumer to access the stuff from context.js\n            <Consumer>\n                {value => {\n                    // Pulling out dispatch() from the state\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}{\" \"}\n                                <i\n                                    onClick={() =>\n                                        this.setState({\n                                            showContactInfo: !this.state\n                                                .showContactInfo\n                                        })\n                                    }\n                                    className=\"fas fa-sort-down\"\n                                    style={{ cursor: \"pointer\" }}\n                                />\n                                <i\n                                    className=\"fas fa-times\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        color: \"red\"\n                                    }}\n                                    // Add event listern to delete when icon is click\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        id,\n                                        dispatch\n                                    )}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i \n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight: '1rem'\n                                        }}\n                                        ></i>\n                                </Link>\n\n                            </h4>\n                            {showContactInfo ? ( // If this is true; show the content, if 'null' then hide\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        Email: {email}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Phone: {phone}\n                                    </li>\n                                </ul>\n                            ) : null}\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}