{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\TaskM\\\\TaskM.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label } from 'reactstrap'; //constante JSON\n\nconst url = \"https://jsonplaceholder.typicode.com/todos\";\nconst initState = {\n  todo: [],\n  modalInsertar: false,\n  modalEliminar: false,\n  tipoModal: \"\",\n  form: {\n    id: \"\",\n    title: \"\"\n  }\n};\nexport class TaskM extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"modalInsertar\", () => this.setState(oldState => _objectSpread(_objectSpread({}, initState), {}, {\n      todo: oldState.todo,\n      modalInsertar: !oldState.modalInsertar\n    })));\n\n    _defineProperty(this, \"handleChange\", async e => {\n      e.persist();\n      await this.setState({\n        form: _objectSpread(_objectSpread({}, this.state.form), {}, {\n          [e.target.name]: e.target.value\n        })\n      });\n      console.log(this.state.form);\n    });\n\n    _defineProperty(this, \"seleccionarTask\", todo => {\n      this.setState({\n        tipoModal: \"actualizar\",\n        form: {\n          id: todo.id,\n          title: todo.title\n        }\n      });\n    });\n\n    _defineProperty(this, \"peticionGet\", () => {\n      axios.get(url).then(response => {\n        this.setState({\n          todo: response.data\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"peticionPost\", async () => {\n      await axios.post(url, this.state.form).then(response => {\n        this.modalInsertar();\n        this.peticionGet();\n        console.log(response);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"peticionPut\", () => {\n      axios.put(url + this.state.form.id, this.state.form).then(response => {\n        this.modalInsertar();\n        this.peticionGet();\n        console.log(response);\n      });\n    });\n\n    _defineProperty(this, \"peticionDelete\", () => {\n      axios.delete(url + this.state.form.id).then(response => {\n        this.setState({\n          modalEliminar: false\n        });\n        this.peticionGet();\n        console.log(response);\n      });\n    });\n\n    this.state = initState;\n  } //acciones\n\n\n  componentDidMount() {\n    this.peticionGet();\n  } //Task Manager\n\n\n  render() {\n    const {\n      form\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => {\n        this.setState(oldState => _objectSpread(_objectSpread({}, oldState), {}, {\n          tipoModal: \"insertar\"\n        }));\n        this.modalInsertar();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Agregar Task\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }\n    }), __jsx(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, \"TASK\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, \"ACCIONES\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, this.state.todo.map(userID => {\n      return __jsx(\"tr\", {\n        key: userID.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, userID.id), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }, userID.title), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 41\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => {\n          this.seleccionarTask(userID);\n          this.modalInsertar();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      }, \"Editar\"), \"   \", __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => {\n          this.seleccionarTask(userID);\n          this.setState({\n            modalEliminar: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, \"Eliminar\")));\n    })))), __jsx(Modal, {\n      isOpen: this.state.modalInsertar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, __jsx(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Nueva Task\"), __jsx(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, __jsx(Label, {\n      htmlFor: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"ID\"), __jsx(Input, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      id: \"id\",\n      readOnly: true,\n      onChange: this.handleChange,\n      value: this.state.todo.length + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }), __jsx(Label, {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, \"Task\"), __jsx(Input, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      onChange: this.handleChange,\n      value: form.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }))), __jsx(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, this.state.tipoModal == \"insertar\" ? __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => this.peticionPost(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, \"Agregar\") : __jsx(Button, {\n      className: \"btn btn-success\",\n      onClick: () => this.peticionPut(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, \"Actualizar\"), __jsx(Button, {\n      className: \"btn btn-danger\",\n      onClick: () => this.modalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Cancelar\"))), __jsx(Modal, {\n      isOpen: this.state.modalEliminar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, __jsx(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Est\\xE1s seguro que deseas eliminar esta Task? \", form && form.title), __jsx(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.peticionDelete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"Si\"), __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => this.setState({\n        modalEliminar: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"NO\"))));\n  }\n\n}\nexport default TaskM;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/Programación/Bluuweb/Next/ontime/components/TaskM/TaskM.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Label","url","initState","todo","modalInsertar","modalEliminar","tipoModal","form","id","title","TaskM","constructor","props","setState","oldState","e","persist","state","target","name","value","console","log","get","then","response","data","catch","error","message","post","peticionGet","put","delete","componentDidMount","render","map","userID","seleccionarTask","handleChange","length","peticionPost","peticionPut","peticionDelete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label} from 'reactstrap';\r\n\r\n//constante JSON\r\nconst url = \"https://jsonplaceholder.typicode.com/todos\";\r\nconst initState = { \r\n    todo: [],\r\n    modalInsertar: false,\r\n    modalEliminar: false,\r\n    tipoModal: \"\",\r\n    form: {\r\n        id: \"\",\r\n        title: \"\",\r\n      }\r\n};\r\n\r\nexport class TaskM extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = initState\r\n    }\r\n\r\n//acciones\r\n    modalInsertar = () => this.setState(oldState => ({...initState, todo: oldState.todo, modalInsertar: !oldState.modalInsertar, }))\r\n\r\n    handleChange= async e=>{\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    seleccionarTask=(todo)=>{\r\n        this.setState({\r\n            tipoModal: \"actualizar\",\r\n            form: {\r\n                id: todo.id,\r\n                title: todo.title\r\n            }\r\n        })\r\n    }\r\n\r\n//peticiones\r\n    peticionGet=()=> {\r\n        axios.get(url).then(response=>{\r\n            this.setState({todo: response.data});\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n          })\r\n    }\r\n\r\n     peticionPost= async ()=>{\r\n         await axios.post(url, this.state.form).then(response=>{\r\n           this.modalInsertar();\r\n           this.peticionGet();\r\n           console.log(response);\r\n         }).catch(error=>{\r\n           console.log(error.message);\r\n         })\r\n     }\r\n\r\n     peticionPut=()=>{\r\n         axios.put(url + this.state.form.id, this.state.form).then(response=>{\r\n             this.modalInsertar();\r\n             this.peticionGet();\r\n             console.log(response);\r\n         })\r\n     }\r\n\r\n     peticionDelete=()=>{\r\n        axios.delete(url + this.state.form.id).then(response=>{\r\n            this.setState({modalEliminar: false});\r\n            this.peticionGet();\r\n            console.log(response);\r\n        })\r\n     }\r\n    \r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n//Task Manager\r\n    render() {\r\n        const {form} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <br />\r\n                    <Button\r\n                        className=\"btn btn-success\" \r\n                        onClick={\r\n                            () => {\r\n                                this.setState(oldState => ({\r\n                                    ...oldState,\r\n                                    tipoModal: \"insertar\"\r\n                                }));\r\n                                this.modalInsertar()\r\n                            }}\r\n                    >\r\n                                Agregar Task\r\n                    </Button>\r\n                    <br /><br />\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr >\r\n                                <th>ID</th>\r\n                                <th>TASK</th>\r\n                                <th>ACCIONES</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.todo.map((userID,)=>{\r\n                                return(\r\n                                    <tr key={userID.id}>\r\n                                        <td>{userID.id}</td>\r\n                                        <td>{userID.title}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-secondary\" \r\n                                            onClick={()=>{this.seleccionarTask(userID); this.modalInsertar()}}>Editar</button>\r\n                                            {\"   \"}\r\n                                            <button className=\"btn btn-danger\"\r\n                                            onClick={()=>{this.seleccionarTask(userID); this.setState({modalEliminar: true})}}\r\n                                            >Eliminar</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                {/* Modal Agregar/Editar */}\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                    Nueva Task\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"id\">ID</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"id\"  \r\n                        id= \"id\"\r\n                        readOnly \r\n                        onChange={this.handleChange}\r\n                        value={this.state.todo.length+1}/>\r\n                        <br />\r\n                        <Label htmlFor=\"title\">Task</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"title\" \r\n                        id=\"title\"\r\n                        onChange={this.handleChange}\r\n                        value={form.title}/> \r\n                    </FormGroup>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {this.state.tipoModal == \"insertar\"?\r\n                        <Button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>Agregar</Button>\r\n                        :\r\n                        <Button className=\"btn btn-success\" onClick={()=>this.peticionPut()}>Actualizar</Button>\r\n                        }\r\n                        <Button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* Modal Eliminar */}\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalBody>\r\n                        Estás seguro que deseas eliminar esta Task? {form && form.title}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-success\" onClick={()=>this.peticionDelete()}>Si</button>\r\n                        <button className=\"btn btn-danger\" onClick={()=>this.setState({modalEliminar: false})}>NO</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskM;"]},"metadata":{},"sourceType":"module"}