{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\TaskList\\\\TaskList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport '../CSS/TaskList.module.css';\n\nvar TaskList = /*#__PURE__*/function (_React$Component) {\n  _inherits(TaskList, _React$Component);\n\n  var _super = _createSuper(TaskList);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _super.call(this, props);\n    _this.displayTask = _this.displayTask.bind(_assertThisInitialized(_this));\n    _this.finishTask = _this.finishTask.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"displayTask\",\n    value: function displayTask(task) {\n      return __jsx(\"li\", {\n        className: \"font-weight-bold \".concat(task.completed ? 'strikethrough' : ''),\n        key: \"\".concat(task.id),\n        onClick: this.finishTask,\n        title: \"Click to finish this task\",\n        id: task.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 12\n        }\n      }, task.title);\n    }\n  }, {\n    key: \"updateTaskStatus\",\n    value: function updateTaskStatus(selectedTask) {\n      return fetch(\"https://jsonplaceholder.typicode.com/todos/\".concat(selectedTask.id), {\n        method: 'PUT',\n        body: JSON.stringify({\n          completed: true\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function () {\n        selectedTask.classList.add('strikethrough');\n      })[\"catch\"](console.error);\n    }\n  }, {\n    key: \"finishTask\",\n    value: function finishTask(event) {\n      var selectedTask = event.currentTarget;\n      this.updateTaskStatus(selectedTask);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"card card-body bg-info mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }\n      }, __jsx(\"ul\", {\n        className: \"task-list text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, this.props.items && this.props.items.length !== 0 ? this.props.items && this.props.items.map(this.displayTask) : __jsx(\"label\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"You have no tasks at the moment!\")));\n    }\n  }]);\n\n  return TaskList;\n}(React.Component);\n\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/Programaci√≥n/Bluuweb/Next/ontime/components/TaskList/TaskList.js"],"names":["React","TaskList","props","displayTask","bind","finishTask","task","completed","id","title","selectedTask","fetch","method","body","JSON","stringify","headers","then","classList","add","console","error","event","currentTarget","updateTaskStatus","items","length","map","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJiB;AAKlB;;;;gCAEWE,I,EAAM;AAChB,aAAO;AACL,QAAA,SAAS,6BAAsBA,IAAI,CAACC,SAAL,GAAiB,eAAjB,GAAmC,EAAzD,CADJ;AAEL,QAAA,GAAG,YAAKD,IAAI,CAACE,EAAV,CAFE;AAGL,QAAA,OAAO,EAAE,KAAKH,UAHT;AAIL,QAAA,KAAK,EAAC,2BAJD;AAKL,QAAA,EAAE,EAAEC,IAAI,CAACE,EALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOJF,IAAI,CAACG,KAPD,CAAP;AASD;;;qCAEgBC,Y,EAAc;AAC7B,aAAOC,KAAK,sDAA+CD,YAAY,CAACF,EAA5D,GAAkE;AAC5EI,QAAAA,MAAM,EAAE,KADoE;AAE5EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,UAAAA,SAAS,EAAE;AADQ,SAAf,CAFsE;AAK5ES,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALmE,OAAlE,CAAL,CASJC,IATI,CASC,YAAM;AACVP,QAAAA,YAAY,CAACQ,SAAb,CAAuBC,GAAvB,CAA2B,eAA3B;AACD,OAXI,WAYEC,OAAO,CAACC,KAZV,CAAP;AAaD;;;+BAEUC,K,EAAO;AAChB,UAAMZ,YAAY,GAAGY,KAAK,CAACC,aAA3B;AACA,WAAKC,gBAAL,CAAsBd,YAAtB;AACD;;;6BAEQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKR,KAAL,CAAWuB,KAAX,IAAoB,KAAKvB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,KAA4B,CAAhD,GACA,KAAKxB,KAAL,CAAWuB,KAAX,IAAoB,KAAKvB,KAAL,CAAWuB,KAAX,CAAiBE,GAAjB,CAAqB,KAAKxB,WAA1B,CADpB,GAEE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAJN,CADK,CAAP;AASD;;;;EAnDoBH,KAAK,CAAC4B,S;;AAsD7B,eAAe3B,QAAf","sourcesContent":["import React from 'react';\r\nimport '../CSS/TaskList.module.css';\r\n\r\nclass TaskList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.displayTask = this.displayTask.bind(this);\r\n    this.finishTask = this.finishTask.bind(this);\r\n  }\r\n\r\n  displayTask(task) {\r\n    return <li\r\n      className={`font-weight-bold ${task.completed ? 'strikethrough' : ''}`}\r\n      key={`${task.id}`}\r\n      onClick={this.finishTask}\r\n      title=\"Click to finish this task\"\r\n      id={task.id}\r\n    >\r\n      {task.title}\r\n    </li>\r\n  };\r\n\r\n  updateTaskStatus(selectedTask) {\r\n    return fetch(`https://jsonplaceholder.typicode.com/todos/${selectedTask.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        completed: true\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n    })\r\n      .then(() => {\r\n        selectedTask.classList.add('strikethrough')\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  finishTask(event) {\r\n    const selectedTask = event.currentTarget;\r\n    this.updateTaskStatus(selectedTask);\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"card card-body bg-info mb-2\">\r\n      <ul className=\"task-list text-white\">\r\n        {\r\n          this.props.items && this.props.items.length !== 0 ?\r\n          this.props.items && this.props.items.map(this.displayTask) :\r\n            <label className=\"font-weight-bold\">You have no tasks at the moment!</label>\r\n        }\r\n      </ul>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}