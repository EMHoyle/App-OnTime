{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\Modal\\\\Modal.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label } from 'reactstrap';\nimport './Modal.module.css';\n\nvar Ventana = /*#__PURE__*/function (_React$Component) {\n  _inherits(Ventana, _React$Component);\n\n  var _super = _createSuper(Ventana);\n\n  function Ventana() {\n    var _this;\n\n    _classCallCheck(this, Ventana);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      abierto: false,\n      form: {\n        id: '',\n        title: '',\n        completed: ''\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"abrirModal\", function () {\n      _this.setState({\n        abierto: !_this.state.abierto\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.persist();\n                _context.next = 3;\n                return _this.setState({\n                  form: _objectSpread(_objectSpread({}, _this.state.form()), {}, _defineProperty({}, e.target.name, e.target.value))\n                });\n\n              case 3:\n                console.log(_this.state.form);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Ventana, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Button, {\n        className: \"btn btn-success\",\n        onClick: this.abrirModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, \"Agregar Task\"), __jsx(Modal, {\n        isOpen: this.state.abierto,\n        className: \"modalStyles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, __jsx(ModalHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"Nueva Task\"), __jsx(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, __jsx(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, __jsx(Label, {\n        htmlFor: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \"ID\"), __jsx(Input, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"id\",\n        id: \"id\",\n        readOnly: true,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }), __jsx(Label, {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"Task\"), __jsx(Input, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"title\",\n        id: \"id\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }))), __jsx(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Agregar\"), __jsx(Button, {\n        className: \"btn btn-danger\",\n        onClick: this.abrirModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Cancelar\"))));\n    }\n  }]);\n\n  return Ventana;\n}(React.Component);\n\nexport default Ventana;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/ProgramaciÃ³n/Bluuweb/Next/ontime/components/Modal/Modal.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Label","Ventana","abierto","form","id","title","completed","setState","state","e","persist","target","name","value","console","log","abrirModal","handleChange","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4DC,SAA5D,EAAuEC,KAAvE,EAA8EC,KAA9E,QAA0F,YAA1F;AACA,OAAO,oBAAP;;IAEMC,O;;;;;;;;;;;;;;;;4DACE;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,EADA;AAEJC,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,SAAS,EAAE;AAHP;AAFF,K;;iEASK,YAAI;AACb,YAAKC,QAAL,CAAc;AAACL,QAAAA,OAAO,EAAE,CAAC,MAAKM,KAAL,CAAWN;AAAtB,OAAd;AACD,K;;;0EAEa,iBAAMO,CAAN;AAAA;AAAA;AAAA;AAAA;AACZA,gBAAAA,CAAC,CAACC,OAAF;AADY;AAAA,uBAEN,MAAKH,QAAL,CAAc;AAChBJ,kBAAAA,IAAI,kCACG,MAAKK,KAAL,CAAWL,IAAX,EADH,2BAECM,CAAC,CAACE,MAAF,CAASC,IAFV,EAEiBH,CAAC,CAACE,MAAF,CAASE,KAF1B;AADY,iBAAd,CAFM;;AAAA;AAQZC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWL,IAAvB;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAWN;AACN,aACE,4BACA,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKa,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAGA,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWN,OAA1B;AAAmC,QAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,KAAD;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,IAAI,EAAC,IAAjD;AAAsD,QAAA,EAAE,EAAC,IAAzD;AAA8D,QAAA,QAAQ,MAAtE;AAAuE,QAAA,QAAQ,EAAE,KAAKe,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE,MAAC,KAAD;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAyD,QAAA,EAAE,EAAC,IAA5D;AAAiE,QAAA,QAAQ,EAAE,KAAKA,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CAJF,EAcE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,KAAKD,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAdF,CAHA,CADF;AAyBD;;;;EAnDmBxB,KAAK,CAAC0B,S;;AAsD5B,eAAejB,OAAf","sourcesContent":["import React from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label} from 'reactstrap';\r\nimport './Modal.module.css'\r\n\r\nclass Ventana extends React.Component{\r\n  state={\r\n    abierto: false,\r\n    form: {\r\n      id: '',\r\n      title: '',\r\n      completed: ''\r\n    }\r\n  }\r\n\r\n  abrirModal=()=>{\r\n    this.setState({abierto: !this.state.abierto});\r\n  }\r\n\r\n  handleChange= async e=>{\r\n    e.persist();\r\n    await this.setState({\r\n        form: {\r\n            ...this.state.form(),\r\n            [e.target.name]: e.target.value\r\n        }\r\n    });\r\n    console.log(this.state.form);\r\n}\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n      <Button className=\"btn btn-success\" onClick={this.abrirModal}>Agregar Task</Button>\r\n\r\n      <Modal isOpen={this.state.abierto} className=\"modalStyles\">\r\n        <ModalHeader>\r\n          Nueva Task\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label htmlFor=\"id\">ID</Label>\r\n            <Input className=\"form-control\" type=\"text\" name=\"id\" id=\"id\" readOnly onChange={this.handleChange}/>\r\n            <br />\r\n            <Label htmlFor=\"title\">Task</Label>\r\n            <Input className=\"form-control\" type=\"text\" name=\"title\" id=\"id\" onChange={this.handleChange}/> \r\n          </FormGroup>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n            <Button className=\"btn btn-success\">Agregar</Button>\r\n            <Button className=\"btn btn-danger\" onClick={this.abrirModal}>Cancelar</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ventana;"]},"metadata":{},"sourceType":"module"}