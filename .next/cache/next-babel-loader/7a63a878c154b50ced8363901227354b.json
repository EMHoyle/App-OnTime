{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maria Elena\\\\Desktop\\\\Programaci\\xF3n\\\\Bluuweb\\\\Next\\\\ontime\\\\components\\\\TaskM\\\\TaskM.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label } from 'reactstrap'; //constante JSON\n\nvar url = \"https://jsonplaceholder.typicode.com/todos\";\nexport var TaskM = /*#__PURE__*/function (_Component) {\n  _inherits(TaskM, _Component);\n\n  var _super = _createSuper(TaskM);\n\n  function TaskM(props) {\n    var _this;\n\n    _classCallCheck(this, TaskM);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalInsertar\", function () {\n      _this.setState({\n        modalInsertar: !_this.state.modalInsertar\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.persist();\n                _context.next = 3;\n                return _this.setState({\n                  form: _objectSpread(_objectSpread({}, _this.state.form), {}, _defineProperty({}, e.target.name, e.target.value))\n                });\n\n              case 3:\n                console.log(_this.state.form);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"seleccionarTask\", function (todo) {\n      _this.setState({\n        tipoModal: \"actualizar\",\n        form: {\n          id: todo.id,\n          title: todo.title\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"peticionGet\", function () {\n      axios.get(url).then(function (response) {\n        _this.setState({\n          todo: response.data\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"peticionPost\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(url, _this.state.form).then(function (response) {\n                _this.modalInsertar();\n\n                _this.peticionGet();\n\n                console.log(response);\n              })[\"catch\"](function (error) {\n                console.log(error.message);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"peticionPut\", function () {\n      axios.put(url + _this.state.form.id, _this.state.form).then(function (response) {\n        _this.modalInsertar();\n\n        _this.peticionGet();\n\n        console.log(response);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"peticionDelete\", function () {\n      axios[\"delete\"](url + _this.state.form.id).then(function (response) {\n        _this.setState({\n          modalEliminar: false\n        });\n\n        _this.peticionGet();\n\n        console.log(response);\n      });\n    });\n\n    _this.state = {\n      todo: [],\n      modalInsertar: false,\n      modalEliminar: false,\n      tipoModal: \"\",\n      form: {\n        id: \"\",\n        title: \"\"\n      }\n    };\n    return _this;\n  } //acciones\n\n\n  _createClass(TaskM, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.peticionGet();\n    } //Task Manager\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var form = this.state.form;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }), __jsx(Button, {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          _this2.setState({\n            form: null,\n            tipoModal: \"insertar\"\n          });\n\n          _this2.modalInsertar();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, \"Agregar Task\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }), __jsx(\"table\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, \"ID\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, \"TASK\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, \"ACCIONES\"))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, this.state.todo.map(function (userID) {\n        return __jsx(\"tr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }\n        }, __jsx(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 41\n          }\n        }, userID.id), __jsx(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }\n        }, userID.title), __jsx(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }\n        }, __jsx(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: function onClick() {\n            _this2.seleccionarTask(userID);\n\n            _this2.modalInsertar();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 45\n          }\n        }, \"Editar\"), \"   \", __jsx(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            _this2.seleccionarTask(userID);\n\n            _this2.setState({\n              modalEliminar: true\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 45\n          }\n        }, \"Eliminar\")));\n      })))), __jsx(Modal, {\n        isOpen: this.state.modalInsertar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, __jsx(ModalHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, \"Nueva Task\"), __jsx(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, __jsx(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, __jsx(Label, {\n        htmlFor: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"ID\"), __jsx(Input, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"id\",\n        id: \"id\",\n        readOnly: true,\n        onChange: this.handleChange,\n        value: form ? form.id : this.state.todo.length + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }), __jsx(Label, {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, \"Task\"), __jsx(Input, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        onChange: this.handleChange,\n        value: form ? form.title : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }))), __jsx(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, this.state.tipoModal == \"insertar\" ? __jsx(Button, {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.peticionPost();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, \"Agregar\") : __jsx(Button, {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.peticionPut();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, \"Actualizar\"), __jsx(Button, {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.modalInsertar();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, \"Cancelar\"))), __jsx(Modal, {\n        isOpen: this.state.modalEliminar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, __jsx(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, \"Est\\xE1s seguro que deseas eliminar esta Task? \", form && form.title), __jsx(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.peticionDelete();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, \"Si\"), __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.setState({\n            modalEliminar: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, \"NO\"))));\n    }\n  }]);\n\n  return TaskM;\n}(Component);\nexport default TaskM;","map":{"version":3,"sources":["C:/Users/Maria Elena/Desktop/Programación/Bluuweb/Next/ontime/components/TaskM/TaskM.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Label","url","TaskM","props","setState","modalInsertar","state","e","persist","form","target","name","value","console","log","todo","tipoModal","id","title","get","then","response","data","error","message","post","peticionGet","put","modalEliminar","map","userID","seleccionarTask","handleChange","length","peticionPost","peticionPut","peticionDelete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label} from 'reactstrap';\r\n\r\n//constante JSON\r\nconst url = \"https://jsonplaceholder.typicode.com/todos\"\r\n\r\nexport class TaskM extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            todo: [],\r\n            modalInsertar: false,\r\n            modalEliminar: false,\r\n            tipoModal: \"\",\r\n            form: {\r\n                id: \"\",\r\n                title: \"\",\r\n              },\r\n        };\r\n    }\r\n\r\n//acciones\r\n    modalInsertar=()=>{\r\n        this.setState({modalInsertar: !this.state.modalInsertar});\r\n    }\r\n\r\n    handleChange= async e=>{\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    seleccionarTask=(todo)=>{\r\n        this.setState({\r\n            tipoModal: \"actualizar\",\r\n            form: {\r\n                id: todo.id,\r\n                title: todo.title\r\n            }\r\n        })\r\n    }\r\n\r\n//peticiones\r\n    peticionGet=()=> {\r\n        axios.get(url).then(response=>{\r\n            this.setState({todo: response.data});\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n          })\r\n    }\r\n\r\n     peticionPost= async ()=>{\r\n         await axios.post(url, this.state.form).then(response=>{\r\n           this.modalInsertar();\r\n           this.peticionGet();\r\n           console.log(response);\r\n         }).catch(error=>{\r\n           console.log(error.message);\r\n         })\r\n     }\r\n\r\n     peticionPut=()=>{\r\n         axios.put(url + this.state.form.id, this.state.form).then(response=>{\r\n             this.modalInsertar();\r\n             this.peticionGet();\r\n             console.log(response);\r\n         })\r\n     }\r\n\r\n     peticionDelete=()=>{\r\n        axios.delete(url + this.state.form.id).then(response=>{\r\n            this.setState({modalEliminar: false});\r\n            this.peticionGet();\r\n            console.log(response);\r\n        })\r\n     }\r\n    \r\n    componentDidMount() {\r\n        this.peticionGet();\r\n    }\r\n\r\n//Task Manager\r\n    render() {\r\n        const {form} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <br />\r\n                    <Button className=\"btn btn-success\" \r\n                    onClick={()=>{this.setState({form: null, tipoModal: \"insertar\"}); this.modalInsertar()}}>Agregar Task</Button>\r\n                    <br /><br />\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>TASK</th>\r\n                                <th>ACCIONES</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.todo.map((userID,)=>{\r\n                                return(\r\n                                    <tr>\r\n                                        <td>{userID.id}</td>\r\n                                        <td>{userID.title}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-secondary\" \r\n                                            onClick={()=>{this.seleccionarTask(userID); this.modalInsertar()}}>Editar</button>\r\n                                            {\"   \"}\r\n                                            <button className=\"btn btn-danger\"\r\n                                            onClick={()=>{this.seleccionarTask(userID); this.setState({modalEliminar: true})}}\r\n                                            >Eliminar</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                {/* Modal Agregar/Editar */}\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                    Nueva Task\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"id\">ID</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"id\"  \r\n                        id= \"id\"\r\n                        readOnly \r\n                        onChange={this.handleChange}\r\n                        value={form?form.id: this.state.todo.length+1}/>\r\n                        <br />\r\n                        <Label htmlFor=\"title\">Task</Label>\r\n                        <Input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"title\" \r\n                        id=\"title\"\r\n                        onChange={this.handleChange}\r\n                        value={form?form.title: \"\"}/> \r\n                    </FormGroup>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {this.state.tipoModal == \"insertar\"?\r\n                        <Button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>Agregar</Button>:\r\n                        <Button className=\"btn btn-success\" onClick={()=>this.peticionPut()}>Actualizar</Button>\r\n                        }\r\n                        <Button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* Modal Eliminar */}\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalBody>\r\n                        Estás seguro que deseas eliminar esta Task? {form && form.title}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-success\" onClick={()=>this.peticionDelete()}>Si</button>\r\n                        <button className=\"btn btn-danger\" onClick={()=>this.setState({modalEliminar: false})}>NO</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskM"]},"metadata":{},"sourceType":"module"}